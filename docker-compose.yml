version: '3.3'

services:
  backend:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
        DB_HOST: ${DB_HOST}
        DB_NAME: ${DB_NAME}
    image: backend:v1
    container_name: backend
    restart: unless-stopped
    links:
      - db
    ports:
      - 9000:9000
    environment:
      TESTLINK_USERNAME: '${TESTLINK_USERNAME}'
      TESTLINK_PASSWORD: '${TESTLINK_PASSWORD}'
      TESTLINK_EMAIL: '${TESTLINK_EMAIL}'
    volumes:
      - testlink:/var/www/html/testlink:rw
    networks:
      - testlink-network
  web:
    image: nginx:latest
    restart: unless-stopped
    container_name: web
    links:
      - backend
    ports:
      - 8086:80
    volumes:
      - ./site.conf:/etc/nginx/conf.d/site.conf
      - .apps/nginx/log:/var/log/nginx:rw
      - testlink:/var/www/html/testlink:rw
    networks:
      - testlink-network      
  db:
    image: mysql:5.7
    env_file:
      - .env
    restart: unless-stopped
    container_name: db
    command: --init-file /var/www/html/testlink/install/sql/mysql/testlink_create_tables.sql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASS}'
      MYSQL_USER: '${DB_USER}'
      MYSQL_PASSWORD: '${DB_PASS}'
      MYSQL_DATABASE: '${DB_NAME}'
    volumes:
      - ./apps/db:/var/lib/mysql
      - testlink:/var/www/html/testlink
    networks:
      - testlink-network
networks:
  testlink-network:
    driver: bridge
volumes:
  testlink: {}